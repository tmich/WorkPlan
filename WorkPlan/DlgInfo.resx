<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>