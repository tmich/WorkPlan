<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAEgAAABIAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD19fXg4ODQ0dHFxsa9vr66urq6urq9vr7FxsbR
        0dHg4eH19fUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADq6uq4uLiN
        jo5paWlKS0s7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDxKS0tpamqNjo64ubnq6uoA
        AAAAAAAAAAAAAAAAAAAAAAAAAAD29varrKxiY2M7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7
        PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDxiY2OrrKz29vYAAAAAAAAAAADAwMBMTU07
        PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDw7
        PDw7PDw7PDw7PDw7PDw7PDxMTU3AwMAAAADIyMg8PT07PDw7PDw7PDw7PDw8PT1bXFyBgoKhoaG6u7vP
        z8/e3t7q6ury8vL19fX19fXy8vLq6ure3t7Pz8+6urqgoaGBgoJbXFw8PT07PDw7PDw7PDw7PDw8PT3I
        yMiLjIw7PDw7PDw7PDxoaWm2trbw8PAAAAAAAAAAAAAAAAAAAADq6uqSk5OSk5Pn5+fy8vKSk5OSk5P1
        9fUAAAAAAAAAAAAAAAAAAADv8PC1trZoaWk7PDw7PDw7PDyMjIzPz88/QEA7PDyxsrIAAADo0bXbuI3r
        174AAADev5jbuI369vDZ2dk7PDw7PDy9vb3Q0NA7PDw7PDzs7Oz58uvbuI3gwp0AAADp07nbuI3q1LsA
        AACwsbE7PDw/QEDQ0NAAAADNzc1dXl75+fkAAADRo2y4cR3PnmX9+/i5ch+4cR327OHZ2dk7PDw7PDyf
        n5+ys7M7PDw7PDzs7Ozy5ta4cR27diX//v3Ll1q4cR3UqncAAAD5+fldXl7Nzc0AAAAAAAAAAAD8/Pzv
        7+8AAADRo2y4cR3EiELz5ti4cR24cR327OHZ2dk7PDw7PDyBgYGVlZU7PDw7PDzs7Ozy5ta4cR24cR32
        7ePAgje4cR3UqncAAADv7+/8/PwAAAAAAAAAAAAAAAAAAAAAAAAAAADRo2y4cR26dSPnz7K4cR24cR32
        7OHZ2dk7PDw7PDxjZGR2d3c7PDw7PDzs7Ozy5ta4cR24cR3o0re5ch64cR3UqncAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAADRo2y4cR24cR3Tp3O4cR24cR327OHZ2dk7PDw7PDxFRkZYWVk7PDw7PDzs
        7Ozy5ta4cR24cR3Tp3O4cR24cR3UqncAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADRo2y4cR24
        cR2+fTC4cR24cR327OHZ2dk7PDw7PDw7PDw8PT07PDw7PDzs7Ozy5ta4cR24cR2+fTC4cR24cR3UqncA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADRo2y4cR24cR24cR24cR24cR327OHZ2dk7PDw7PDw7
        PDw7PDw7PDw7PDzs7Ozy5ta4cR24cR24cR24cR24cR3UqncAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADRo2y4cR24cR24cR24cR24cR327OHZ2dk7PDw7PDw7PDw7PDw7PDw7PDzs7Ozy5ta4cR24cR24
        cR24cR24cR3UqncAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADOnWS4cR24cR24cR24cR3OnWP/
        /v6wsbE7PDw7PDw7PDw7PDw7PDw7PDzBwsL+/fzLl1m4cR24cR24cR24cR3SpG8AAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADdu5O4cR24cR24cR24cR24cR716+DFxcU8PT07PDw7PDw7PDw7PDw7PDw7PDw+
        Pz/T09Py5dW4cR24cR24cR24cR24cR3gwp4AAAAAAAAAAAAAAAAAAAAAAAAAAAD9+ve6diW4cR24cR24
        cR24cR3BgzkAAAB0dXU7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDyFhYUAAAC9fC64cR24cR24cR24cR28
        eSr+/v0AAAAAAAAAAAAAAAAAAAAAAAD48Oe4cR24cR24cR24cR24cR3EiUQAAABmZ2c7PDw7PDw7PDw7
        PDw7PDw7PDw7PDw7PDx2d3cAAADBgzm4cR24cR24cR24cR24cR379/IAAAAAAAAAAAAAAAAAAAAAAAD4
        8Oe4cR24cR24cR24cR24cR3EiUQAAABmZ2c7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDx2d3cAAADBgzm4
        cR24cR24cR24cR24cR379/IAAAAAAAAAAAAAAAAAAAAAAAD48Oe4cR24cR24cR24cR24cR3EiUQAAABm
        Z2c7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDx2d3cAAADBgzm4cR24cR24cR24cR24cR379/IAAAAAAAAA
        AAAAAAAAAAAAAAD48Oe4cR24cR24cR24cR24cR3EiUQAAABmZ2c7PDw7PDw7PDw7PDw7PDw7PDw7PDw7
        PDx2d3cAAADBgzm4cR24cR24cR24cR24cR379/IAAAAAAAAAAAAAAAAAAAAAAAD58uq4cR24cR24cR24
        cR24cR3EiUQAAABmZ2c7PDw7PDw7PDw7PDw7PDw7PDw7PDw7PDx2d3cAAADBgzm4cR24cR24cR24cR24
        cR38+fUAAAAAAAAAAAAAAAAAAAAAAAD///7ChT64cR24cR24cR24cR2+fTEAAACAgIA7PDw7PDw7PDw7
        PDw7PDw7PDw7PDw7PDyRkZH+/v28eCi4cR24cR24cR24cR3FjEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADx49PChTy4cR24cR24cR24cR3u3cnd3d1GR0c7PDw7PDw7PDw7PDw7PDw7PDxMTU3n6Ojr1r64cR24
        cR24cR24cR3DiEHz59kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//v748Ofnz7Levpfu3sr8+PQA
        AADk5OSXl5eFhYWFhYWFhYWFhYWbm5vq6uoAAAD7+PPt3MfevZbn0LX48Oj///4AAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAD//v3QoWq4cR24cR26dSPnzrEAAAAAAAAAAAC1trZtbW1qamqsrKz+/v4A
        AAAAAADkyKe5dCG4cR24cR3Tp3QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADo0re4cR24
        cR24cR24cR28eiv9+vgAAAClpqY7PDw7PDw7PDw7PDyUlZUAAAD79vG7diW4cR24cR24cR24cR3s2cIA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADcuI+4cR24cR24cR24cR24cR306t3+/v5JSko7PDw7
        PDw7PDw7PDxAQUH29vbx4tK4cR24cR24cR24cR24cR3fv5oAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAADp1Lq4cR24cR24cR24cR29ey39+/n6+vo8PT07PDw7PDw7PDw7PDw7PDzp6en7+PO7eCe4cR24
        cR24cR24cR3t28YAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///7TqHO4cR24cR27dybp07gA
        AAAAAABnZ2c7PDw7PDw7PDw7PDxWV1f+/v4AAADmzbC6dSS4cR24cR3Wrn0AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADz5tfq1bz58+wAAAAAAAAAAADe3t5QUVE7PDw7PDxKS0vT09MA
        AAAAAAAAAAD58urq1bz06NoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAD39/fExMTBwcHz9PQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/wAP/+AAAH8AAAAOAAAABAAAAAAHwD4AIgAEQiAAAEcgAABP4AAAf+AAAH/gA
        AB/4AAAf+AAAH/gAAB/wAAAP4CAEB+AgBAfgIAQH4CAEB+AgBAfgIAQH4CAAD/AAAA/4EAgf+BwYP/gI
        EB/4AAAf+AAAH/gYCD/+OBx///w//w==
</value>
  </data>
</root>